// Generated by gencpp from file hivemind/CVXpy.msg
// DO NOT EDIT!


#ifndef HIVEMIND_MESSAGE_CVXPY_H
#define HIVEMIND_MESSAGE_CVXPY_H

#include <ros/service_traits.h>


#include <hivemind/CVXpyRequest.h>
#include <hivemind/CVXpyResponse.h>


namespace hivemind
{

struct CVXpy
{

typedef CVXpyRequest Request;
typedef CVXpyResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct CVXpy
} // namespace hivemind


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::hivemind::CVXpy > {
  static const char* value()
  {
    return "c0d55e6e98e4357c0e73f9e900c18298";
  }

  static const char* value(const ::hivemind::CVXpy&) { return value(); }
};

template<>
struct DataType< ::hivemind::CVXpy > {
  static const char* value()
  {
    return "hivemind/CVXpy";
  }

  static const char* value(const ::hivemind::CVXpy&) { return value(); }
};


// service_traits::MD5Sum< ::hivemind::CVXpyRequest> should match 
// service_traits::MD5Sum< ::hivemind::CVXpy > 
template<>
struct MD5Sum< ::hivemind::CVXpyRequest>
{
  static const char* value()
  {
    return MD5Sum< ::hivemind::CVXpy >::value();
  }
  static const char* value(const ::hivemind::CVXpyRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::hivemind::CVXpyRequest> should match 
// service_traits::DataType< ::hivemind::CVXpy > 
template<>
struct DataType< ::hivemind::CVXpyRequest>
{
  static const char* value()
  {
    return DataType< ::hivemind::CVXpy >::value();
  }
  static const char* value(const ::hivemind::CVXpyRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::hivemind::CVXpyResponse> should match 
// service_traits::MD5Sum< ::hivemind::CVXpy > 
template<>
struct MD5Sum< ::hivemind::CVXpyResponse>
{
  static const char* value()
  {
    return MD5Sum< ::hivemind::CVXpy >::value();
  }
  static const char* value(const ::hivemind::CVXpyResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::hivemind::CVXpyResponse> should match 
// service_traits::DataType< ::hivemind::CVXpy > 
template<>
struct DataType< ::hivemind::CVXpyResponse>
{
  static const char* value()
  {
    return DataType< ::hivemind::CVXpy >::value();
  }
  static const char* value(const ::hivemind::CVXpyResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // HIVEMIND_MESSAGE_CVXPY_H
